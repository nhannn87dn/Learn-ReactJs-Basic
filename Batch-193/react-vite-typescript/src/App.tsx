import { LuBell, LuHand, LuThumbsUp } from "react-icons/lu";
import "./App.css";
import ButtonV2 from "./components/ButtonV2";
import React, { useState } from "react";
import MusicPlay from "./components/MusicPlay";
import ZaloHeart from "./components/ZaloHeart";
function App() {
  //C√≥ th·ªÉ vi·∫øt logic handler event ·ªü ƒë√¢y
  const onHandleClickButtonPlay = () => {
    //Code logic x·ª≠ l√Ω khi ng∆∞·ªùi d√πng click chu·ªôt
    console.log("B·∫°n ƒë√£ click chu·ªôt l√™n n√∫t Play");
  };

  const onHandlePlayChannel = (channel: number) => {
    console.log(`ƒêang xem VTVT ${channel}`);
  };

  //Qu·∫£n l√Ω tr·∫°ng th√°i ƒë√≥ng v√† m·ªü th√¥ng b√°o
  // const isShow = false;
  //S∆∞ d·ª•ng state ƒë·ªÉ qu·∫£n l√≠ tr·∫°ng th√°i thay ƒë·ªïi c·ªßa isShow
  const [isShow, setIsShow] = React.useState(false);
  console.log("<<=== üöÄ isShow ===>>", isShow);
  /**
   * isShow l√† state, v·ªõi gi√° tr·ªã kh·ªüi t·∫°o  = false
   * setIsShow l√† h√†m ƒë·ªÉ thay ƒë·ªïi gi√° tr·ªã c·ªßa isShow
   * t√™n isShow, setIsShow --> b·∫°n ƒë·∫∑t t√πy bi·∫øn, nh∆∞ng
   * tu√¢n th·ªß quy t·∫Øc
   */
  //let count = 0;
  const [count, setCount] = useState(0);

  console.log("app re-render");
  const [isLike, setIsLike] = useState(false);
  console.log("<<=== üöÄ isLike ===>>", isLike);
  return (
    <div className="container mx-auto my-5">
      <MusicPlay />
      <hr />
      <ZaloHeart />
      <div className="space-x-5 mb-5">
        <span
          onClick={() => {
            setIsLike(!isLike);
          }}
          className={`flex gap-x-[5px] items-center cursor-pointer ${
            isLike ? "text-blue-700" : ""
          }`}
        >
          <LuThumbsUp /> Th√≠ch
        </span>
      </div>
      <div className="space-x-5 mb-5">
        <button
          onClick={() => {
            setCount(count - 1); //b·∫±ng gi√° tr·ªã hi·ªán t·∫°i + 1 ƒë∆°n v·ªã
          }}
        >
          - 1
        </button>{" "}
        <span>{count}</span>{" "}
        <button
          onClick={() => {
            setCount(count + 1); //b·∫±ng gi√° tr·ªã hi·ªán t·∫°i + 1 ƒë∆°n v·ªã
          }}
        >
          + 1
        </button>
      </div>

      <div className="space-x-5">
        <button onClick={onHandleClickButtonPlay}>Play</button>
        <button onClick={() => onHandlePlayChannel(1)}>VTV1</button>
        <button onClick={() => onHandlePlayChannel(2)}>VTV2</button>
      </div>
      <div className="space-y-2 mt-5">
        <input
          onFocus={() => {
            console.log("B·∫°n ƒë√£ ƒë·∫∑t con tr·ªè v√†o input");
          }}
          onKeyDown={() => {
            console.log("B·∫°n v·ª´a nh·∫•n ph√≠m v√†o input");
          }}
          onChange={(event) => {
            //l·∫•y value c·ªßa input
            console.log(event.target.value);
          }}
          type="text"
        />
      </div>
      <form
        className="mt-5 space-x-3"
        onSubmit={(e) => {
          e.preventDefault(); //NgƒÉn form load page
          console.log("B·∫°n ƒë√£ submit form");
          //Ki·ªÉm tra email h·ª£p l·ªá
        }}
      >
        <input type="text" name="email" />
        <button type="submit">Submit</button>
      </form>
      <p>B·∫°n c√≥ th·ªÉ truy·ªÅn Event handler nh∆∞ m·ªôt prop</p>
      <ButtonV2
        onHandleCLick={() => onHandlePlayChannel(3)}
        type="default"
        label="VTV 3"
      />
      <ButtonV2
        onHandleCLick={() => onHandlePlayChannel(8)}
        type="default"
        label="VTV 8"
      />
      <button
        onClick={() => {
          //X·ª≠ l√Ω logic khi nh·∫•n v√†o c√°i chu√¥ng
          ///setIsShow(true); //thay ƒë·ªïi gi√° tr·ªã c·ªßa isShow th√†nh true
          setIsShow(!isShow);
        }}
      >
        <LuBell />
      </button>
      {isShow && (
        <ul>
          <li>Notification 1</li>
          <li>Notification 2</li>
          <li>Notification 3</li>
          <li>Notification 4</li>
        </ul>
      )}
    </div>
  );
}

export default App;

import React, {useRef ,useState, useCallback,useMemo} from 'react';

import './App.css'
// import Greeting from './components/Greeting';
// import CallAPI from './components/CallAPI';

const computeLetterCount = (word : string)  => {
  let i = 0;
  while (i < 1000000000) i++;
  return word.length;
};

import Todos from './components/Todos';

function App() {
  //const [toogle, setToggle] = React.useState<boolean>(false)
 
  const [count, setCount] = useState(0);
  const [todos, setTodos] = useState<string[]>([]);
  const [wordIndex, setWordIndex] = useState(0);
  const words = ["hey", "this", "is", "cool"];
  const word = words[wordIndex];

  const increment = () => {
    setCount(c => c + 1);
  };

  const letterCount = useMemo(() => {
    return computeLetterCount(word);
}, [word]);

  //const letterCount = computeLetterCount(word);
  
  // const addTodo = () => {
  //   setTodos(t => [...t, "New Todo"]);
  // };

  const addTodo = useCallback(() => {
    setTodos((t) => [...t, "New Todo"]);
  }, [todos]);

  const buttonRef = useRef(null);

  React.useEffect(() => {
    if (buttonRef.current) {
      buttonRef.current.classList.add('highlight');
    }

    return () => {
      if (buttonRef.current) {
        buttonRef.current.classList.remove('highlight');
      }
    };
  }, []);

  const inputRef = useRef();

  console.log('render');

  const handleClick = () => {
    inputRef.current.value = 'Hello, React!';
  };
 
  return (
    <>
    <div>
      <input type="text" ref={inputRef} />
      <button onClick={handleClick}>Change Value</button>
    </div>
    
    <button ref={buttonRef}>
      Click me
    </button>
    <h2>Compute number of letters</h2>

<p>
  "{word}" has {letterCount} letters
</p>

<button
  onClick={() => {
    const next = wordIndex + 1 === words.length ? 0 : wordIndex + 1;
    setWordIndex(next);
  }}
>
  Next word
</button>
<br />
<br />
    <Todos todos={todos} addTodo={addTodo} />
      <hr />
      <div>
        Count: {count}
        <button onClick={increment}>+</button>
      </div>
    
    
    </>
  )
}

export default App
